# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/workflowservice/v1/request_response.proto

require 'google/protobuf'

require 'temporal/enums/v1/workflow_pb'
require 'temporal/enums/v1/namespace_pb'
require 'temporal/enums/v1/failed_cause_pb'
require 'temporal/enums/v1/common_pb'
require 'temporal/enums/v1/query_pb'
require 'temporal/enums/v1/task_list_pb'
require 'temporal/common/v1/message_pb'
require 'temporal/history/v1/message_pb'
require 'temporal/workflow/v1/message_pb'
require 'temporal/decision/v1/message_pb'
require 'temporal/failure/v1/message_pb'
require 'temporal/filter/v1/message_pb'
require 'temporal/namespace/v1/message_pb'
require 'temporal/query/v1/message_pb'
require 'temporal/replication/v1/message_pb'
require 'temporal/tasklist/v1/message_pb'
require 'temporal/version/v1/message_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("temporal/workflowservice/v1/request_response.proto", :syntax => :proto3) do
    add_message "temporal.workflowservice.v1.RegisterNamespaceRequest" do
      optional :name, :string, 1
      optional :description, :string, 2
      optional :owner_email, :string, 3
      optional :workflow_execution_retention_period_in_days, :int32, 4
      optional :emit_metric, :bool, 5
      repeated :clusters, :message, 6, "temporal.replication.v1.ClusterReplicationConfig"
      optional :active_cluster_name, :string, 7
      map :data, :string, :string, 8
      optional :security_token, :string, 9
      optional :is_global_namespace, :bool, 10
      optional :history_archival_status, :enum, 11, "temporal.enums.v1.ArchivalStatus"
      optional :history_archival_uri, :string, 12
      optional :visibility_archival_status, :enum, 13, "temporal.enums.v1.ArchivalStatus"
      optional :visibility_archival_uri, :string, 14
    end
    add_message "temporal.workflowservice.v1.RegisterNamespaceResponse" do
    end
    add_message "temporal.workflowservice.v1.ListNamespacesRequest" do
      optional :page_size, :int32, 1
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.ListNamespacesResponse" do
      repeated :namespaces, :message, 1, "temporal.workflowservice.v1.DescribeNamespaceResponse"
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.DescribeNamespaceRequest" do
      optional :name, :string, 1
      optional :id, :string, 2
    end
    add_message "temporal.workflowservice.v1.DescribeNamespaceResponse" do
      optional :namespace_info, :message, 1, "temporal.namespace.v1.NamespaceInfo"
      optional :config, :message, 2, "temporal.namespace.v1.NamespaceConfig"
      optional :replication_config, :message, 3, "temporal.replication.v1.NamespaceReplicationConfig"
      optional :failover_version, :int64, 4
      optional :is_global_namespace, :bool, 5
    end
    add_message "temporal.workflowservice.v1.UpdateNamespaceRequest" do
      optional :name, :string, 1
      optional :update_info, :message, 2, "temporal.namespace.v1.UpdateNamespaceInfo"
      optional :config, :message, 3, "temporal.namespace.v1.NamespaceConfig"
      optional :replication_config, :message, 4, "temporal.replication.v1.NamespaceReplicationConfig"
      optional :security_token, :string, 5
      optional :delete_bad_binary, :string, 6
    end
    add_message "temporal.workflowservice.v1.UpdateNamespaceResponse" do
      optional :namespace_info, :message, 1, "temporal.namespace.v1.NamespaceInfo"
      optional :config, :message, 2, "temporal.namespace.v1.NamespaceConfig"
      optional :replication_config, :message, 3, "temporal.replication.v1.NamespaceReplicationConfig"
      optional :failover_version, :int64, 4
      optional :is_global_namespace, :bool, 5
    end
    add_message "temporal.workflowservice.v1.DeprecateNamespaceRequest" do
      optional :name, :string, 1
      optional :security_token, :string, 2
    end
    add_message "temporal.workflowservice.v1.DeprecateNamespaceResponse" do
    end
    add_message "temporal.workflowservice.v1.StartWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :workflow_id, :string, 2
      optional :workflow_type, :message, 3, "temporal.common.v1.WorkflowType"
      optional :task_list, :message, 4, "temporal.tasklist.v1.TaskList"
      optional :input, :message, 5, "temporal.common.v1.Payloads"
      optional :workflow_execution_timeout_seconds, :int32, 6
      optional :workflow_run_timeout_seconds, :int32, 7
      optional :workflow_task_timeout_seconds, :int32, 8
      optional :identity, :string, 9
      optional :request_id, :string, 10
      optional :workflow_id_reuse_policy, :enum, 11, "temporal.enums.v1.WorkflowIdReusePolicy"
      optional :retry_policy, :message, 12, "temporal.common.v1.RetryPolicy"
      optional :cron_schedule, :string, 13
      optional :memo, :message, 14, "temporal.common.v1.Memo"
      optional :search_attributes, :message, 15, "temporal.common.v1.SearchAttributes"
      optional :header, :message, 16, "temporal.common.v1.Header"
    end
    add_message "temporal.workflowservice.v1.StartWorkflowExecutionResponse" do
      optional :run_id, :string, 1
    end
    add_message "temporal.workflowservice.v1.GetWorkflowExecutionHistoryRequest" do
      optional :namespace, :string, 1
      optional :execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :maximum_page_size, :int32, 3
      optional :next_page_token, :bytes, 4
      optional :wait_for_new_event, :bool, 5
      optional :history_event_filter_type, :enum, 6, "temporal.enums.v1.HistoryEventFilterType"
      optional :skip_archival, :bool, 7
    end
    add_message "temporal.workflowservice.v1.GetWorkflowExecutionHistoryResponse" do
      optional :history, :message, 1, "temporal.history.v1.History"
      repeated :raw_history, :message, 2, "temporal.common.v1.DataBlob"
      optional :next_page_token, :bytes, 3
      optional :archived, :bool, 4
    end
    add_message "temporal.workflowservice.v1.PollForDecisionTaskRequest" do
      optional :namespace, :string, 1
      optional :task_list, :message, 2, "temporal.tasklist.v1.TaskList"
      optional :identity, :string, 3
      optional :binary_checksum, :string, 4
    end
    add_message "temporal.workflowservice.v1.PollForDecisionTaskResponse" do
      optional :task_token, :bytes, 1
      optional :workflow_execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :workflow_type, :message, 3, "temporal.common.v1.WorkflowType"
      optional :previous_started_event_id, :int64, 4
      optional :started_event_id, :int64, 5
      optional :attempt, :int64, 6
      optional :backlog_count_hint, :int64, 7
      optional :history, :message, 8, "temporal.history.v1.History"
      optional :next_page_token, :bytes, 9
      optional :query, :message, 10, "temporal.query.v1.WorkflowQuery"
      optional :workflow_execution_task_list, :message, 11, "temporal.tasklist.v1.TaskList"
      optional :scheduled_timestamp, :int64, 12
      optional :started_timestamp, :int64, 13
      map :queries, :string, :message, 14, "temporal.query.v1.WorkflowQuery"
    end
    add_message "temporal.workflowservice.v1.RespondDecisionTaskCompletedRequest" do
      optional :task_token, :bytes, 1
      repeated :decisions, :message, 2, "temporal.decision.v1.Decision"
      optional :identity, :string, 3
      optional :sticky_attributes, :message, 4, "temporal.tasklist.v1.StickyExecutionAttributes"
      optional :return_new_decision_task, :bool, 5
      optional :force_create_new_decision_task, :bool, 6
      optional :binary_checksum, :string, 7
      map :query_results, :string, :message, 8, "temporal.query.v1.WorkflowQueryResult"
    end
    add_message "temporal.workflowservice.v1.RespondDecisionTaskCompletedResponse" do
      optional :decision_task, :message, 1, "temporal.workflowservice.v1.PollForDecisionTaskResponse"
    end
    add_message "temporal.workflowservice.v1.RespondDecisionTaskFailedRequest" do
      optional :task_token, :bytes, 1
      optional :cause, :enum, 2, "temporal.enums.v1.DecisionTaskFailedCause"
      optional :failure, :message, 3, "temporal.failure.v1.Failure"
      optional :identity, :string, 4
      optional :binary_checksum, :string, 5
    end
    add_message "temporal.workflowservice.v1.RespondDecisionTaskFailedResponse" do
    end
    add_message "temporal.workflowservice.v1.PollForActivityTaskRequest" do
      optional :namespace, :string, 1
      optional :task_list, :message, 2, "temporal.tasklist.v1.TaskList"
      optional :identity, :string, 3
      optional :task_list_metadata, :message, 4, "temporal.tasklist.v1.TaskListMetadata"
    end
    add_message "temporal.workflowservice.v1.PollForActivityTaskResponse" do
      optional :task_token, :bytes, 1
      optional :workflow_namespace, :string, 2
      optional :workflow_type, :message, 3, "temporal.common.v1.WorkflowType"
      optional :workflow_execution, :message, 4, "temporal.common.v1.WorkflowExecution"
      optional :activity_type, :message, 5, "temporal.common.v1.ActivityType"
      optional :activity_id, :string, 6
      optional :header, :message, 7, "temporal.common.v1.Header"
      optional :input, :message, 8, "temporal.common.v1.Payloads"
      optional :heartbeat_details, :message, 9, "temporal.common.v1.Payloads"
      optional :scheduled_timestamp, :int64, 10
      optional :scheduled_timestamp_of_this_attempt, :int64, 11
      optional :started_timestamp, :int64, 12
      optional :attempt, :int32, 13
      optional :schedule_to_close_timeout_seconds, :int32, 14
      optional :start_to_close_timeout_seconds, :int32, 15
      optional :heartbeat_timeout_seconds, :int32, 16
      optional :retry_policy, :message, 17, "temporal.common.v1.RetryPolicy"
    end
    add_message "temporal.workflowservice.v1.RecordActivityTaskHeartbeatRequest" do
      optional :task_token, :bytes, 1
      optional :details, :message, 2, "temporal.common.v1.Payloads"
      optional :identity, :string, 3
    end
    add_message "temporal.workflowservice.v1.RecordActivityTaskHeartbeatResponse" do
      optional :cancel_requested, :bool, 1
    end
    add_message "temporal.workflowservice.v1.RecordActivityTaskHeartbeatByIdRequest" do
      optional :namespace, :string, 1
      optional :workflow_id, :string, 2
      optional :run_id, :string, 3
      optional :activity_id, :string, 4
      optional :details, :message, 5, "temporal.common.v1.Payloads"
      optional :identity, :string, 6
    end
    add_message "temporal.workflowservice.v1.RecordActivityTaskHeartbeatByIdResponse" do
      optional :cancel_requested, :bool, 1
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCompletedRequest" do
      optional :task_token, :bytes, 1
      optional :result, :message, 2, "temporal.common.v1.Payloads"
      optional :identity, :string, 3
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCompletedResponse" do
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCompletedByIdRequest" do
      optional :namespace, :string, 1
      optional :workflow_id, :string, 2
      optional :run_id, :string, 3
      optional :activity_id, :string, 4
      optional :result, :message, 5, "temporal.common.v1.Payloads"
      optional :identity, :string, 6
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCompletedByIdResponse" do
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskFailedRequest" do
      optional :task_token, :bytes, 1
      optional :failure, :message, 2, "temporal.failure.v1.Failure"
      optional :identity, :string, 3
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskFailedResponse" do
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskFailedByIdRequest" do
      optional :namespace, :string, 1
      optional :workflow_id, :string, 2
      optional :run_id, :string, 3
      optional :activity_id, :string, 4
      optional :failure, :message, 5, "temporal.failure.v1.Failure"
      optional :identity, :string, 6
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskFailedByIdResponse" do
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCanceledRequest" do
      optional :task_token, :bytes, 1
      optional :details, :message, 2, "temporal.common.v1.Payloads"
      optional :identity, :string, 3
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCanceledResponse" do
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCanceledByIdRequest" do
      optional :namespace, :string, 1
      optional :workflow_id, :string, 2
      optional :run_id, :string, 3
      optional :activity_id, :string, 4
      optional :details, :message, 5, "temporal.common.v1.Payloads"
      optional :identity, :string, 6
    end
    add_message "temporal.workflowservice.v1.RespondActivityTaskCanceledByIdResponse" do
    end
    add_message "temporal.workflowservice.v1.RequestCancelWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :workflow_execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :identity, :string, 3
      optional :request_id, :string, 4
    end
    add_message "temporal.workflowservice.v1.RequestCancelWorkflowExecutionResponse" do
    end
    add_message "temporal.workflowservice.v1.SignalWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :workflow_execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :signal_name, :string, 3
      optional :input, :message, 4, "temporal.common.v1.Payloads"
      optional :identity, :string, 5
      optional :request_id, :string, 6
      optional :control, :string, 7
    end
    add_message "temporal.workflowservice.v1.SignalWorkflowExecutionResponse" do
    end
    add_message "temporal.workflowservice.v1.SignalWithStartWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :workflow_id, :string, 2
      optional :workflow_type, :message, 3, "temporal.common.v1.WorkflowType"
      optional :task_list, :message, 4, "temporal.tasklist.v1.TaskList"
      optional :input, :message, 5, "temporal.common.v1.Payloads"
      optional :workflow_execution_timeout_seconds, :int32, 6
      optional :workflow_run_timeout_seconds, :int32, 7
      optional :workflow_task_timeout_seconds, :int32, 8
      optional :identity, :string, 9
      optional :request_id, :string, 10
      optional :workflow_id_reuse_policy, :enum, 11, "temporal.enums.v1.WorkflowIdReusePolicy"
      optional :signal_name, :string, 12
      optional :signal_input, :message, 13, "temporal.common.v1.Payloads"
      optional :control, :string, 14
      optional :retry_policy, :message, 15, "temporal.common.v1.RetryPolicy"
      optional :cron_schedule, :string, 16
      optional :memo, :message, 17, "temporal.common.v1.Memo"
      optional :search_attributes, :message, 18, "temporal.common.v1.SearchAttributes"
      optional :header, :message, 19, "temporal.common.v1.Header"
    end
    add_message "temporal.workflowservice.v1.SignalWithStartWorkflowExecutionResponse" do
      optional :run_id, :string, 1
    end
    add_message "temporal.workflowservice.v1.ResetWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :workflow_execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :reason, :string, 3
      optional :decision_finish_event_id, :int64, 4
      optional :request_id, :string, 5
    end
    add_message "temporal.workflowservice.v1.ResetWorkflowExecutionResponse" do
      optional :run_id, :string, 1
    end
    add_message "temporal.workflowservice.v1.TerminateWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :workflow_execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :reason, :string, 3
      optional :details, :message, 4, "temporal.common.v1.Payloads"
      optional :identity, :string, 5
    end
    add_message "temporal.workflowservice.v1.TerminateWorkflowExecutionResponse" do
    end
    add_message "temporal.workflowservice.v1.ListOpenWorkflowExecutionsRequest" do
      optional :namespace, :string, 1
      optional :maximum_page_size, :int32, 2
      optional :next_page_token, :bytes, 3
      optional :start_time_filter, :message, 4, "temporal.filter.v1.StartTimeFilter"
      oneof :filters do
        optional :execution_filter, :message, 5, "temporal.filter.v1.WorkflowExecutionFilter"
        optional :type_filter, :message, 6, "temporal.filter.v1.WorkflowTypeFilter"
      end
    end
    add_message "temporal.workflowservice.v1.ListOpenWorkflowExecutionsResponse" do
      repeated :executions, :message, 1, "temporal.workflow.v1.WorkflowExecutionInfo"
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.ListClosedWorkflowExecutionsRequest" do
      optional :namespace, :string, 1
      optional :maximum_page_size, :int32, 2
      optional :next_page_token, :bytes, 3
      optional :start_time_filter, :message, 4, "temporal.filter.v1.StartTimeFilter"
      oneof :filters do
        optional :execution_filter, :message, 5, "temporal.filter.v1.WorkflowExecutionFilter"
        optional :type_filter, :message, 6, "temporal.filter.v1.WorkflowTypeFilter"
        optional :status_filter, :message, 7, "temporal.filter.v1.StatusFilter"
      end
    end
    add_message "temporal.workflowservice.v1.ListClosedWorkflowExecutionsResponse" do
      repeated :executions, :message, 1, "temporal.workflow.v1.WorkflowExecutionInfo"
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.ListWorkflowExecutionsRequest" do
      optional :namespace, :string, 1
      optional :page_size, :int32, 2
      optional :next_page_token, :bytes, 3
      optional :query, :string, 4
    end
    add_message "temporal.workflowservice.v1.ListWorkflowExecutionsResponse" do
      repeated :executions, :message, 1, "temporal.workflow.v1.WorkflowExecutionInfo"
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.ListArchivedWorkflowExecutionsRequest" do
      optional :namespace, :string, 1
      optional :page_size, :int32, 2
      optional :next_page_token, :bytes, 3
      optional :query, :string, 4
    end
    add_message "temporal.workflowservice.v1.ListArchivedWorkflowExecutionsResponse" do
      repeated :executions, :message, 1, "temporal.workflow.v1.WorkflowExecutionInfo"
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.ScanWorkflowExecutionsRequest" do
      optional :namespace, :string, 1
      optional :page_size, :int32, 2
      optional :next_page_token, :bytes, 3
      optional :query, :string, 4
    end
    add_message "temporal.workflowservice.v1.ScanWorkflowExecutionsResponse" do
      repeated :executions, :message, 1, "temporal.workflow.v1.WorkflowExecutionInfo"
      optional :next_page_token, :bytes, 2
    end
    add_message "temporal.workflowservice.v1.CountWorkflowExecutionsRequest" do
      optional :namespace, :string, 1
      optional :query, :string, 2
    end
    add_message "temporal.workflowservice.v1.CountWorkflowExecutionsResponse" do
      optional :count, :int64, 1
    end
    add_message "temporal.workflowservice.v1.GetSearchAttributesRequest" do
    end
    add_message "temporal.workflowservice.v1.GetSearchAttributesResponse" do
      map :keys, :string, :enum, 1, "temporal.enums.v1.IndexedValueType"
    end
    add_message "temporal.workflowservice.v1.RespondQueryTaskCompletedRequest" do
      optional :task_token, :bytes, 1
      optional :completed_type, :enum, 2, "temporal.enums.v1.QueryResultType"
      optional :query_result, :message, 3, "temporal.common.v1.Payloads"
      optional :error_message, :string, 4
      optional :worker_version_info, :message, 5, "temporal.version.v1.WorkerVersionInfo"
    end
    add_message "temporal.workflowservice.v1.RespondQueryTaskCompletedResponse" do
    end
    add_message "temporal.workflowservice.v1.ResetStickyTaskListRequest" do
      optional :namespace, :string, 1
      optional :execution, :message, 2, "temporal.common.v1.WorkflowExecution"
    end
    add_message "temporal.workflowservice.v1.ResetStickyTaskListResponse" do
    end
    add_message "temporal.workflowservice.v1.QueryWorkflowRequest" do
      optional :namespace, :string, 1
      optional :execution, :message, 2, "temporal.common.v1.WorkflowExecution"
      optional :query, :message, 3, "temporal.query.v1.WorkflowQuery"
      optional :query_reject_condition, :enum, 4, "temporal.enums.v1.QueryRejectCondition"
    end
    add_message "temporal.workflowservice.v1.QueryWorkflowResponse" do
      optional :query_result, :message, 1, "temporal.common.v1.Payloads"
      optional :query_rejected, :message, 2, "temporal.query.v1.QueryRejected"
    end
    add_message "temporal.workflowservice.v1.DescribeWorkflowExecutionRequest" do
      optional :namespace, :string, 1
      optional :execution, :message, 2, "temporal.common.v1.WorkflowExecution"
    end
    add_message "temporal.workflowservice.v1.DescribeWorkflowExecutionResponse" do
      optional :execution_config, :message, 1, "temporal.workflow.v1.WorkflowExecutionConfig"
      optional :workflow_execution_info, :message, 2, "temporal.workflow.v1.WorkflowExecutionInfo"
      repeated :pending_activities, :message, 3, "temporal.workflow.v1.PendingActivityInfo"
      repeated :pending_children, :message, 4, "temporal.workflow.v1.PendingChildExecutionInfo"
    end
    add_message "temporal.workflowservice.v1.DescribeTaskListRequest" do
      optional :namespace, :string, 1
      optional :task_list, :message, 2, "temporal.tasklist.v1.TaskList"
      optional :task_list_type, :enum, 3, "temporal.enums.v1.TaskListType"
      optional :include_task_list_status, :bool, 4
    end
    add_message "temporal.workflowservice.v1.DescribeTaskListResponse" do
      repeated :pollers, :message, 1, "temporal.tasklist.v1.PollerInfo"
      optional :task_list_status, :message, 2, "temporal.tasklist.v1.TaskListStatus"
    end
    add_message "temporal.workflowservice.v1.GetClusterInfoRequest" do
    end
    add_message "temporal.workflowservice.v1.GetClusterInfoResponse" do
      optional :supported_sdk_versions, :message, 1, "temporal.version.v1.SupportedSDKVersions"
    end
    add_message "temporal.workflowservice.v1.ListTaskListPartitionsRequest" do
      optional :namespace, :string, 1
      optional :task_list, :message, 2, "temporal.tasklist.v1.TaskList"
    end
    add_message "temporal.workflowservice.v1.ListTaskListPartitionsResponse" do
      repeated :activity_task_list_partitions, :message, 1, "temporal.tasklist.v1.TaskListPartitionMetadata"
      repeated :decision_task_list_partitions, :message, 2, "temporal.tasklist.v1.TaskListPartitionMetadata"
    end
  end
end

module Temporal
  module Proto
    module WorkflowService
      module V1
        RegisterNamespaceRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RegisterNamespaceRequest").msgclass
        RegisterNamespaceResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RegisterNamespaceResponse").msgclass
        ListNamespacesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListNamespacesRequest").msgclass
        ListNamespacesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListNamespacesResponse").msgclass
        DescribeNamespaceRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DescribeNamespaceRequest").msgclass
        DescribeNamespaceResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DescribeNamespaceResponse").msgclass
        UpdateNamespaceRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.UpdateNamespaceRequest").msgclass
        UpdateNamespaceResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.UpdateNamespaceResponse").msgclass
        DeprecateNamespaceRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DeprecateNamespaceRequest").msgclass
        DeprecateNamespaceResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DeprecateNamespaceResponse").msgclass
        StartWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.StartWorkflowExecutionRequest").msgclass
        StartWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.StartWorkflowExecutionResponse").msgclass
        GetWorkflowExecutionHistoryRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.GetWorkflowExecutionHistoryRequest").msgclass
        GetWorkflowExecutionHistoryResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.GetWorkflowExecutionHistoryResponse").msgclass
        PollForDecisionTaskRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.PollForDecisionTaskRequest").msgclass
        PollForDecisionTaskResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.PollForDecisionTaskResponse").msgclass
        RespondDecisionTaskCompletedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondDecisionTaskCompletedRequest").msgclass
        RespondDecisionTaskCompletedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondDecisionTaskCompletedResponse").msgclass
        RespondDecisionTaskFailedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondDecisionTaskFailedRequest").msgclass
        RespondDecisionTaskFailedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondDecisionTaskFailedResponse").msgclass
        PollForActivityTaskRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.PollForActivityTaskRequest").msgclass
        PollForActivityTaskResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.PollForActivityTaskResponse").msgclass
        RecordActivityTaskHeartbeatRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RecordActivityTaskHeartbeatRequest").msgclass
        RecordActivityTaskHeartbeatResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RecordActivityTaskHeartbeatResponse").msgclass
        RecordActivityTaskHeartbeatByIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RecordActivityTaskHeartbeatByIdRequest").msgclass
        RecordActivityTaskHeartbeatByIdResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RecordActivityTaskHeartbeatByIdResponse").msgclass
        RespondActivityTaskCompletedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCompletedRequest").msgclass
        RespondActivityTaskCompletedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCompletedResponse").msgclass
        RespondActivityTaskCompletedByIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCompletedByIdRequest").msgclass
        RespondActivityTaskCompletedByIdResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCompletedByIdResponse").msgclass
        RespondActivityTaskFailedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskFailedRequest").msgclass
        RespondActivityTaskFailedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskFailedResponse").msgclass
        RespondActivityTaskFailedByIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskFailedByIdRequest").msgclass
        RespondActivityTaskFailedByIdResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskFailedByIdResponse").msgclass
        RespondActivityTaskCanceledRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCanceledRequest").msgclass
        RespondActivityTaskCanceledResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCanceledResponse").msgclass
        RespondActivityTaskCanceledByIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCanceledByIdRequest").msgclass
        RespondActivityTaskCanceledByIdResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondActivityTaskCanceledByIdResponse").msgclass
        RequestCancelWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RequestCancelWorkflowExecutionRequest").msgclass
        RequestCancelWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RequestCancelWorkflowExecutionResponse").msgclass
        SignalWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.SignalWorkflowExecutionRequest").msgclass
        SignalWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.SignalWorkflowExecutionResponse").msgclass
        SignalWithStartWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.SignalWithStartWorkflowExecutionRequest").msgclass
        SignalWithStartWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.SignalWithStartWorkflowExecutionResponse").msgclass
        ResetWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ResetWorkflowExecutionRequest").msgclass
        ResetWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ResetWorkflowExecutionResponse").msgclass
        TerminateWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.TerminateWorkflowExecutionRequest").msgclass
        TerminateWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.TerminateWorkflowExecutionResponse").msgclass
        ListOpenWorkflowExecutionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListOpenWorkflowExecutionsRequest").msgclass
        ListOpenWorkflowExecutionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListOpenWorkflowExecutionsResponse").msgclass
        ListClosedWorkflowExecutionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListClosedWorkflowExecutionsRequest").msgclass
        ListClosedWorkflowExecutionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListClosedWorkflowExecutionsResponse").msgclass
        ListWorkflowExecutionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListWorkflowExecutionsRequest").msgclass
        ListWorkflowExecutionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListWorkflowExecutionsResponse").msgclass
        ListArchivedWorkflowExecutionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListArchivedWorkflowExecutionsRequest").msgclass
        ListArchivedWorkflowExecutionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListArchivedWorkflowExecutionsResponse").msgclass
        ScanWorkflowExecutionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ScanWorkflowExecutionsRequest").msgclass
        ScanWorkflowExecutionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ScanWorkflowExecutionsResponse").msgclass
        CountWorkflowExecutionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.CountWorkflowExecutionsRequest").msgclass
        CountWorkflowExecutionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.CountWorkflowExecutionsResponse").msgclass
        GetSearchAttributesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.GetSearchAttributesRequest").msgclass
        GetSearchAttributesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.GetSearchAttributesResponse").msgclass
        RespondQueryTaskCompletedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondQueryTaskCompletedRequest").msgclass
        RespondQueryTaskCompletedResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.RespondQueryTaskCompletedResponse").msgclass
        ResetStickyTaskListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ResetStickyTaskListRequest").msgclass
        ResetStickyTaskListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ResetStickyTaskListResponse").msgclass
        QueryWorkflowRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.QueryWorkflowRequest").msgclass
        QueryWorkflowResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.QueryWorkflowResponse").msgclass
        DescribeWorkflowExecutionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DescribeWorkflowExecutionRequest").msgclass
        DescribeWorkflowExecutionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DescribeWorkflowExecutionResponse").msgclass
        DescribeTaskListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DescribeTaskListRequest").msgclass
        DescribeTaskListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.DescribeTaskListResponse").msgclass
        GetClusterInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.GetClusterInfoRequest").msgclass
        GetClusterInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.GetClusterInfoResponse").msgclass
        ListTaskListPartitionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListTaskListPartitionsRequest").msgclass
        ListTaskListPartitionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("temporal.workflowservice.v1.ListTaskListPartitionsResponse").msgclass
      end
    end
  end
end
